load('checkermap.mat')
%%

cc = 1;
exper = 2;
h = checkermap(exper).dff(cc,:);
index = find(h>=5*std(h(19:end)));
checkermap(exper).StimOnTimes;

stimtime = [];
for u = 1:length(index)
    f = find(checkermap(exper).StimOnTimes < index(u));
    stimtime = cat(2,stimtime,f(end));
% get the stimonTimes index
end

raw_rf_time = checkermap(exper).StimOnTimes(stimtime); % get the raw response time preceding a spike
raw_rf = checkermap(exper).StimOnLocations(stimtime,:);% get the raw stimulus locations preceding a spike 2*11


StimOnTimes = raw_rf_time;
StimOnLocations = raw_rf;
dff_all = checkermap(exper).dff;

    figure
r = zeros(50,8);

for n = 1:length(StimOnTimes)
    dff = dff_all(cc,StimOnTimes(n):StimOnTimes(n) + 7); % cell_ID dff_StimOn to StimOn+15
    dff = dff - mean(dff(1:2)); % dff - the mean of first 2 elements. What does this do ?
    r(StimOnLocations(n,:),:) = r(StimOnLocations(n,:),:) + ones(4,1)*dff; % input stimulus location
end

%figure(1)
mm = max(max(r))+10;
for t = 1:size(r,2) % time length = 16
   subplot(1,size(r,2),t)
   imagesc(reshape(r(:,t),10,5))
   caxis([-mm mm])
   axis off
end
colormap(redbluecmap)


